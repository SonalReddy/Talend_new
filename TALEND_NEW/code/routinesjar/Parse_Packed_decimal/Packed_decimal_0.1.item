package org.example.talend_new.routinesjar.parse_packed_decimal;

/*
 * user specification: the function's comment should contain keys as follows: 1. write about the function's comment.but
 * it must be before the "{talendTypes}" key.
 * 
 * 2. {talendTypes} 's value must be talend Type, it is required . its value should be one of: String, char | Character,
 * long | Long, int | Integer, boolean | Boolean, byte | Byte, Date, double | Double, float | Float, Object, short |
 * Short
 * 
 * 3. {Category} define a category for the Function. it is required. its value is user-defined .
 * 
 * 4. {param} 's format is: {param} <type>[(<default value or closed list values>)] <name>[ : <comment>]
 * 
 * <type> 's value should be one of: string, int, list, double, object, boolean, long, char, date. <name>'s value is the
 * Function's parameter name. the {param} is optional. so if you the Function without the parameters. the {param} don't
 * added. you can have many parameters for the Function.
 * 
 * 5. {example} gives a example for the Function. it is optional.
 */
public class Packed_decimal {

    /**
     * helloExample: not return value, only print "hello" + message.
     * 
     * 
     * {talendTypes} String
     * 
     * {Category} User Defined
     * 
     * {param} string("world") input: The string need to be printed.
     * 
     * {example} helloExemple("world") # hello world !.
     */
	public static long parse(byte[] pdIn) throws Exception {
	       // Convert packed decimal to long
	         final int PlusSign = 0x0C;       // Plus sign
	         final int MinusSign = 0x0D;      // Minus
	         final int NoSign = 0x0F;         // Unsigned
	         final int DropHO = 0xFF;         // AND mask to drop HO sign bits
	         final int GetLO  = 0x0F;         // Get only LO digit
	   long val = 0;                    // Value to return
	    
	         for(int i=0; i < pdIn.length; i++) {
	            int aByte = pdIn & DropHO; // Get next 2 digits & drop sign bits
	            if(i == pdIn.length - 1) {    // last digit?
	               int digit = aByte >> 4;    // First get digit
	               val = val*10 + digit;
//	               System.out.println("digit=" + digit + ", val=" + val);
	               int sign = aByte & GetLO;  // now get sign
	               if (sign == MinusSign)
	                  val = -val;
	               else {
	                  // Do we care if there is an invalid sign?
	                  if(sign != PlusSign && sign != NoSign)
	                     throw new Exception("OC7");
	               }
	            }else {
	               int digit = aByte >> 4;    // HO first  
	               val = val*10 + digit;
//	               System.out.println("digit=" + digit + ", val=" + val);
	               digit = aByte & GetLO;      // now LO
	               val = val*10 + digit;
//	               System.out.println("digit=" + digit + ", val=" + val);
	            }
	         }
	   return val;
	   } // end parse()
}
